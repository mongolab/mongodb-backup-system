__author__ = 'abdul'

TYPE_BINDINGS = {
    "BackupSystem": "mbs.backup_system.BackupSystem",
    "BackupSystemApiServer": "mbs.api.backup_system_api.BackupSystemApiServer",
    "BackupEngine": "mbs.engine.BackupEngine",
    "Backup": "mbs.backup.Backup",
    "Restore": "mbs.restore.Restore",
    #TODO Completely remove BackupLogEntry because it was changed to EventLogEntry
    "BackupLogEntry": "mbs.task.EventLogEntry",
    "EventLogEntry": "mbs.task.EventLogEntry",
    "Plan": "mbs.plan.BackupPlan",
    "Schedule": "mbs.schedule.Schedule",
    "CronSchedule": "mbs.schedule.CronSchedule",
    "CompositeSchedule": "mbs.schedule.CompositeSchedule",
    "Strategy": "mbs.strategy.BackupStrategy",
    "DumpStrategy": "mbs.strategy.DumpStrategy",
    "CloudBlockStorageStrategy": "mbs.strategy.CloudBlockStorageStrategy",
    "EbsVolumeStorageStrategy": "mbs.strategy.EbsVolumeStorageStrategy",
    "HybridStrategy": "mbs.strategy.HybridStrategy",
    "DataSizePredicate": "mbs.strategy.DataSizePredicate",
    "Source": "mbs.source.BackupSource",
    "SourceStats": "mbs.source.SourceStats",
    "Target": "mbs.target.BackupTarget",
    "TargetReference": "mbs.target.TargetReference",
    "MongoSource": "mbs.source.MongoSource",
    "EbsVolumeStorage": "mbs.source.EbsVolumeStorage",
    "BlobVolumeStorage": "mbs.source.BlobVolumeStorage",
    "ManagedDiskVolumeStorage": "mbs.source.ManagedDiskVolumeStorage",
    "GcpDiskVolumeStorage": "mbs.source.GcpDiskVolumeStorage",
    "CompositeBlockStorage": "mbs.source.CompositeBlockStorage",
    "LVMStorage": "mbs.source.LVMStorage",
    "S3BucketTarget": "mbs.target.S3BucketTarget",
    "RackspaceCloudFilesTarget": "mbs.target.RackspaceCloudFilesTarget",
    "FileReference": "mbs.target.FileReference",
    "EbsSnapshotReference": "mbs.target.EbsSnapshotReference",
    "CompositeBlockStorageSnapshotReference":
        "mbs.target.CompositeBlockStorageSnapshotReference",
    "LVMSnapshotReference": "mbs.target.LVMSnapshotReference",
    "BlobSnapshotReference": "mbs.target.BlobSnapshotReference",
    "ManagedDiskSnapshotReference": "mbs.target.ManagedDiskSnapshotReference",
    "GcpDiskSnapshotReference": "mbs.target.GcpDiskSnapshotReference",
    "RetainLastNPolicy": "mbs.retention.policy.RetainLastNPolicy",
    "RetainMaxTimePolicy": "mbs.retention.policy.RetainMaxTimePolicy",
    "PlanScheduleAuditor": "mbs.auditors.PlanScheduleAuditor",
    "PlanRetentionAuditor": "mbs.auditors.PlanRetentionAuditor",
    "AuditReport": "mbs.audit.AuditReport",
    "AuditEntry": "mbs.audit.AuditEntry",
    "PlanAuditReport": "mbs.audit.PlanAuditReport",
    "PlanScheduleAuditReport": "mbs.audit.PlanScheduleAuditReport",
    "PlanAuditEntry": "mbs.audit.PlanAuditEntry",
    "EmailNotificationHandler": "mbs.notification.EmailNotificationHandler",
    "Encryptor": "mbs.encryption.Encryptor",
    "SourceIPTag": "mbs.tags.SourceIPTag",
    "DefaultBackupNamingScheme": "mbs.naming_scheme.DefaultBackupNamingScheme",
    "TemplateBackupNamingScheme": "mbs.naming_scheme.TemplateBackupNamingScheme",
    "BackupSweeper": "mbs.retention.sweeper.BackupSweeper",
    "BackupExpirationManager": "mbs.retention.expiration_manager.BackupExpirationManager",
    "BaseCredentials": "mbs.credentials.BaseCredentials",
    "LocalBackupAssistant": "mbs.backup_assistant.LocalBackupAssistant",
    "Event": "mbs.events.Event",
    "EventListener": "mbs.events.EventListener",
    "BackupFinishedEvent": "mbs.events.BackupFinishedEvent",
    "RestoreFinishedEvent": "mbs.events.RestoreFinishedEvent",
    "BackupMonitorEventListener": "mbs.monitor.BackupMonitorEventListener",
    "BackupEventListener": "mbs.api.event_listener_api.BackupEventListener",
    "TemplateNotificationMessage": "mbs.notification.message.TemplateNotificationMessage",
    "EmailNotification": "mbs.notification.message.EmailNotification",
    "HipchatNotificationHandler": "mbs.notification.handler.HipchatNotificationHandler",
    "PagerDutyNotificationHandler": "mbs.notification.handler.PagerDutyNotificationHandler",
    "SlackNotificationHandler": "mbs.notification.handler.SlackNotificationHandler",
    "ZendeskNotificationHandler": "mbs.notification.handler.ZendeskNotificationHandler",
    "Notifications": "mbs.notification.handler.Notifications"

}
